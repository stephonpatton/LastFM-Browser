<project name="Ser321 Assign4 C++ Message GUI, sample build file."
         default="targets" basedir="."
         xmlns="antlib:org.apache.tools.ant">
   <taskdef resource="cpptasks.tasks"/>
   <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
   <taskdef resource="net/sf/antcontrib/antlib.xml"/>

   <property name="src" value="./src" />
   <property name="lib" value="./lib" />
   <property name="src.cpp.dir" value="src"/>
   <property name="obj.dir" value="obj"/>
   <property name="dist.dir" value="bin"/>
   <property name="lastfmkey" value="mylastfmkey"/>
   <property environment="env"/>
   <property name="userId" value="${env.USER}"/>
   <!-- <property name="port-1099" value="port-1099"/> -->

   <target name="targets">
     <echo message="targets are clean, prepare, build, execute, targets"/>
     <echo message="execute manually with: ./bin/guiSample"/>
   </target>

   <target name="clean">
     <delete dir="${obj.dir}" failonerror="false"/>
     <delete dir="${dist.dir}" failonerror="false"/>
   </target>

   <target name="prepare">
      <!-- Create the time stamp -->
      <tstamp/>
      <!-- Create the build directory structure used by compile -->
      <echo message="home defined as: ${env.HOME}" />
      <mkdir dir="${dist.dir}" />
      <mkdir dir="${obj.dir}" />
      <if>
         <isset property="env.USERNAME"/>
         <then>
           <echo message="detected username is: ${env.USERNAME}"/>
          </then>
      <elseif>
         <isset property="env.USER"/>
         <then>
            <echo message="detected user is: ${env.USER}"/>
          </then>
      </elseif>
      </if>
      <echo message="host name is: ${os.name}"/>
      <echo message="host arch is: ${os.arch}"/>
      <echo message="host version is: ${os.version}"/>
      <echo message="base directory is: ${basedir}"/>
   </target>

   <target name="build" depends="prepare">
      <cc outtype="executable" subsystem="console"
          outfile="${dist.dir}/guiSample"
          objdir="${obj.dir}">
	  <compilerarg value="-std=c++14"/>
          <includepath>
             <dirset dir="/" includes="usr/include,usr/local/include,usr/include/jsoncpp"/>
          </includepath>
          <libset dir="/usr/lib" libs="stdc++,fltk,fltk_images,curl,jsoncpp,pthread"/>
          <libset dir="/usr/local/lib" libs="curlpp"/>
          <fileset dir="${src.cpp.dir}/sample/" includes="MediaClientGui.cpp,MediaDescription.cpp, MediaLibrary.cpp,samplemain.cpp, MusicLibrary.cpp, Track.cpp, Album.cpp"/>
      </cc>
   </target>

<!--    TODO: change target from .sample to normal-->
   <target name="execute" depends="build">
     <echo message="./bin/guiSample ${userId} ${lastfmkey}"/>
     <exec executable="./bin/guiSample">
       <arg line= "${userId} ${lastfmkey}"/>
     </exec>
   </target>


   <!-- <target name="build.all"
           depends="clean,prepare,build.server,build.client"
           description="Clean then build cpp server, cpp client and java client"/>

<target name="build.client" depends="generate.client.stub">
      <cc outtype="executable" subsystem="console"
          outfile="${dist.dir}/studentRPCClient"
          objdir="${obj.dir}/client">
         <compilerarg value="${cxxflag}"/>
         <includepath>
            <pathelement path="${includepath}"/>
         </includepath>
         <libset dir="${client.lib.path}" libs="${client.lib.list}"/>
         <fileset dir="${src.dir}/cpp/client" includes="StudentTerminalClient.cpp"/>
         <fileset dir="${src.dir}/cpp/server" includes="Student.cpp"/>
      </cc>
   </target>

   <target name="generate.client.stub" depends="prepare">
      <exec dir="${basedir}" executable="jsonrpcstub">
         <arg line="${json.file.name} -cpp-client=studentcollectionstub"/>
      </exec>
      <copy file="studentcollectionstub.h"
            tofile="${src.dir}/cpp/client/studentcollectionstub.h"/>
      <delete file="studentcollectionstub.h"/>
   </target> -->

   <!-- <target name="build.server" depends="generate.server.stub">
     <cc outtype="executable" subsystem="console"
         outfile="${dist.dir}/studentRPCServer"
         objdir="${obj.dir}/server">
         <compiler name="g++"/>
         <compilerarg value="${cxxflag}"/>
         <includepath>
            <pathelement path="${includepath}"/>
         </includepath>
         <libset dir="${server.lib.path}" libs="${server.lib.list}"/>
         <fileset dir="${src.dir}/cpp/server"
                  includes="Student.cpp, StudentCollection.cpp, StudentServer.cpp"/>
      </cc>
   </target> -->

   <!-- <target name="generate.server.stub" depends="prepare">
      <exec dir="${basedir}" executable="jsonrpcstub">
         <arg line="${json.file.name} -cpp-server=studentserverstub"/>
      </exec>
      <copy file="studentserverstub.h"
            tofile="${src.dir}/cpp/server/studentserverstub.h"/>
      <delete file="studentserverstub.h"/>
   </target> -->
   <!-- <target name ="server" depends="build">
      <echo message ="Hello Server"></echo>
      <exec executable="./bin/guiSample"/>
      <arg line="${userId} ${port}"/>
   </target> -->

</project>
